{"version":3,"sources":["src/models/User.ts","src/index.ts"],"names":[],"mappings":";;;;;;ACAA,ADMA,ICNA,ADMA,IAAA,ECNA,GAAA,OAAA,CAAA,eAAA,CAAA;ADMA;ACJC,ADID,ICJO,IAAI,GAAG,CDId,GCJkB,MAAA,CAAA,IAAJ,CAAS;AAAE,ADOvB,ECPuB,IAAI,EAAE,GDO7B,IAAA,CAAoB,CCPC,GDOrB,EAAmC;ACPK,ADOpB,ECPoB,GAAG,EAAE,EDOzB,IAAA,GAAA,IAAA;ACPC,ADKrB,CCLY,CAAb,ODKC,MAAA,GAAyC,EAAzC;ACHF,ADKyC,ICLrC,CAAC,EAAL,CAAQ,QAAR,EAAkB,YAAA;AAChB,EAAA,OAAO,CAAC,GAAR,CAAY,WAAZ;AACD,ADKC,CCPF,CDOE,IAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,QAAJ,EAAoB;ACHtB,ADII,ICJA,CAAC,EAAL,CAAQ,GDIG,ECJX,EAAe,CDIC,IAAL,CAAU,MCJN,EDIJ,CAAP;ACHF,ADIC,ECJD,CDEA,MCFO,CAAC,GAAR,CAAY,YAAZ;AACD,CAFD;AAIA,ADGE,EAAA,ECHE,CAAC,CDGH,CCHF,ADGE,CCHM,MAAR,EAAgB,ADGd,CAAA,GAAA,GAAA,KCHc,KDGV,MAAJ,EAAqB;ACFrB,ADGE,ECHF,OAAO,CAAC,GAAR,CAAY,YAAZ;AACD,ADGG,CCLJ,GDKI,MAAM,CAAC,MAAP,CAAc,KAAK,IAAnB,EAAyB,MAAzB;ACDJ,ADEG,GAHD,CCCE,CAAC,OAAL,CAAa,QAAb;;ADIE,EAAA,IAAA,CAAA,SAAA,CAAA,EAAA,GAAA,UAAG,SAAH,EAAsB,QAAtB,EAAwC;AACpC,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,KAA0B,EAA3C;AACA,IAAA,QAAQ,CAAC,IAAT,CAAc,QAAd;AACA,SAAK,MAAL,CAAY,SAAZ,IAAyB,QAAzB;AACH,GAJD;;AAMA,EAAA,IAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,SAAR,EAAyB;AACvB,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,CAAjB;;AAEA,QAAG,CAAC,QAAD,IAAa,QAAQ,CAAC,MAAT,KAAoB,CAApC,EAAuC;AACrC;AACD;;AAED,IAAA,QAAQ,CAAC,OAAT,CAAiB,UAAA,QAAA,EAAQ;AAAI,aAC3B,QAAQ,EADmB;AAE5B,KAFD;AAGD,GAVD;;AAWF,SAAA,IAAA;AA/BA,CAAA,EAAA;;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["interface UserProps {\n  name?: string;\n  age?: number;\n}\n\ntype Callback = () => void\nexport class User {\n  events: { [key: string] : Callback[] } = {}\n\n  constructor(private data: UserProps) {}\n\n  get(propName: string): (string | number) {\n    return this.data[propName]\n  }\n  \n  set(update: UserProps): void {\n    // Overwrite this.data wi th new updated object.\n    Object.assign(this.data, update)\n  }\n\n  on(eventName: string, callback: Callback): void {\n      const handlers = this.events[eventName] || [];\n      handlers.push(callback)\n      this.events[eventName] = handlers\n  }\n \n  trigger(eventName: string): void {\n    const handlers = this.events[eventName]\n\n    if(!handlers || handlers.length === 0) {\n      return\n    }\n\n    handlers.forEach(callback => (\n      callback()\n    ))\n  }\n}","import { User } from './models/User'\n\n const user = new User({ name: 'theKing', age: 20 })\n\nuser.on('change', () => {\n  console.log(\"hejhoppla\")\n})\n\nuser.on('sdf', () => {\n  console.log(\"hejhoppla2\")\n})\n\nuser.on('noob', () => {\n  console.log(\"hejhoppla3\")\n})\n\nuser.trigger('change')"]}